{"type":"data","nodes":[null,null,null,{"type":"data","data":[{"content":1,"categoryTitle":2},"\u003Chr>\n\u003Cp>\u003Cstrong>Advertisement :)\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>\u003Ca href=\"https://nodeca.github.io/pica/demo/\">pica\u003C/a>\u003C/strong> - high quality and fast image\nresize in browser.\u003C/li>\n\u003Cli>\u003Cstrong>\u003Ca href=\"https://github.com/nodeca/babelfish/\">babelfish\u003C/a>\u003C/strong> - developer friendly\ni18n with plurals support and easy syntax.\u003C/li>\n\u003C/ul>\n\u003Ch2>You will like those projects!\u003C/h2>\n\u003Cp>mark-static is a dynamic content-driven web application built using SvelteKit. This project dynamically generates routes, menus, categories, and subcategories from the folder structure and its content within the static directory. The folder structure follows this pattern: section/category/subcategory/content.md. Multiple sections, categories, and subcategories are supported, with routes dynamically built based on this structure. Content and images are also dynamically handled.\u003C/p>\n\u003Ch1>h1 Heading 8-)\u003C/h1>\n\u003Ch2>h2 Heading\u003C/h2>\n\u003Ch3>h3 Heading for sure\u003C/h3>\n\u003Ch4>h4 Heading\u003C/h4>\n\u003Ch5>h5 Heading\u003C/h5>\n\u003Ch6>h6 Heading\u003C/h6>\n\u003Cp>\u003Ca href=\"#plugins\">Plugins\u003C/a>\u003C/p>\n\u003Ch2>Horizontal Rules\u003C/h2>\n\u003Chr>\n\u003Chr>\n\u003Chr>\n\u003Ch2>Typographic replacements\u003C/h2>\n\u003Cp>Enable typographer option to see result.\u003C/p>\n\u003Cp>(c) (C) (r) (R) (tm) (TM) (p) (P) +-\u003C/p>\n\u003Cp>test.. test... test..... test?..... test!....\u003C/p>\n\u003Cp>!!!!!! ???? ,, -- ---\u003C/p>\n\u003Cp>&quot;Smartypants, double quotes&quot; and &apos;single quotes&apos;\u003C/p>\n\u003Ch2>Emphasis\u003C/h2>\n\u003Cp>\u003Cstrong>This is bold text\u003C/strong>\u003C/p>\n\u003Cp>\u003Cstrong>This is bold text\u003C/strong>\u003C/p>\n\u003Cp>\u003Cem>This is italic text\u003C/em>\u003C/p>\n\u003Cp>\u003Cem>This is italic text\u003C/em>\u003C/p>\n\u003Cp>\u003Cdel>Strikethrough\u003C/del>\u003C/p>\n\u003Ch2>Blockquotes\u003C/h2>\n\u003Cblockquote>\n\u003Cp>Blockquotes can also be nested...\u003C/p>\n\u003Cblockquote>\n\u003Cp>...by using additional greater-than signs right next to each other...\u003C/p>\n\u003Cblockquote>\n\u003Cp>...or with spaces between arrows.\u003C/p>\n\u003C/blockquote>\n\u003C/blockquote>\n\u003C/blockquote>\n\u003Ch2>Lists\u003C/h2>\n\u003Cp>Unordered\u003C/p>\n\u003Cul>\n\u003Cli>Create a list by starting a line with \u003Ccode>+\u003C/code>, \u003Ccode>-\u003C/code>, or \u003Ccode>*\u003C/code>\u003C/li>\n\u003Cli>Sub-lists are made by indenting 2 spaces:\u003Cul>\n\u003Cli>Marker character change forces new list start:\u003Cul>\n\u003Cli>Ac tristique libero volutpat at\u003C/li>\n\u003C/ul>\n\u003Cul>\n\u003Cli>Facilisis in pretium nisl aliquet\u003C/li>\n\u003C/ul>\n\u003Cul>\n\u003Cli>Nulla volutpat aliquam velit\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Very easy!\u003C/li>\n\u003C/ul>\n\u003Cp>Ordered\u003C/p>\n\u003Col>\n\u003Cli>\u003Cp>Lorem ipsum dolor sit amet\u003C/p>\n\u003C/li>\n\u003Cli>\u003Cp>Consectetur adipiscing elit\u003C/p>\n\u003C/li>\n\u003Cli>\u003Cp>Integer molestie lorem at massa\u003C/p>\n\u003C/li>\n\u003Cli>\u003Cp>You can use sequential numbers...\u003C/p>\n\u003C/li>\n\u003Cli>\u003Cp>...or keep all the numbers as \u003Ccode>1.\u003C/code>\u003C/p>\n\u003C/li>\n\u003C/ol>\n\u003Cp>Start numbering with offset:\u003C/p>\n\u003Col start=\"57\">\n\u003Cli>foo\u003C/li>\n\u003Cli>bar\u003C/li>\n\u003C/ol>\n\u003Ch2>Code\u003C/h2>\n\u003Cp>Inline \u003Ccode>code\u003C/code>\u003C/p>\n\u003Cp>Indented code\u003C/p>\n\u003Cpre>\u003Ccode>// Some comments\nline 1 of code\nline 2 of code\nline 3 of code\n\u003C/code>\u003C/pre>\u003Cp>Block code &quot;fences&quot;\u003C/p>\n\u003Cpre>\u003Ccode>Sample text here...\n\u003C/code>\u003C/pre>\u003Cp>Syntax highlighting\u003C/p>\n\u003Cpre>\u003Ccode class=\"hljs language-js\">\u003Cspan class=\"hljs-keyword\">var\u003C/span> foo = \u003Cspan class=\"hljs-keyword\">function\u003C/span> (\u003Cspan class=\"hljs-params\">bar\u003C/span>) {\n    \u003Cspan class=\"hljs-keyword\">return\u003C/span> bar++;\n};\n\n\u003Cspan class=\"hljs-variable language_\">console\u003C/span>.\u003Cspan class=\"hljs-title function_\">log\u003C/span>(\u003Cspan class=\"hljs-title function_\">foo\u003C/span>(\u003Cspan class=\"hljs-number\">5\u003C/span>));\n\u003C/code>\u003C/pre>\u003Ch2>Tables\u003C/h2>\n\u003Ctable>\n\u003Cthead>\n\u003Ctr>\n\u003Cth>Option\u003C/th>\n\u003Cth>Description\u003C/th>\n\u003C/tr>\n\u003C/thead>\n\u003Ctbody>\u003Ctr>\n\u003Ctd>data\u003C/td>\n\u003Ctd>path to data files to supply the data that will be passed into templates.\u003C/td>\n\u003C/tr>\n\u003Ctr>\n\u003Ctd>engine\u003C/td>\n\u003Ctd>engine to be used for processing templates. Handlebars is the default.\u003C/td>\n\u003C/tr>\n\u003Ctr>\n\u003Ctd>ext\u003C/td>\n\u003Ctd>extension to be used for dest files.\u003C/td>\n\u003C/tr>\n\u003C/tbody>\u003C/table>\n\u003Cp>Right aligned columns\u003C/p>\n\u003Ctable>\n\u003Cthead>\n\u003Ctr>\n\u003Cth align=\"right\">Option\u003C/th>\n\u003Cth align=\"right\">Description\u003C/th>\n\u003C/tr>\n\u003C/thead>\n\u003Ctbody>\u003Ctr>\n\u003Ctd align=\"right\">data\u003C/td>\n\u003Ctd align=\"right\">path to data files to supply the data that will be passed into templates.\u003C/td>\n\u003C/tr>\n\u003Ctr>\n\u003Ctd align=\"right\">engine\u003C/td>\n\u003Ctd align=\"right\">engine to be used for processing templates. Handlebars is the default.\u003C/td>\n\u003C/tr>\n\u003Ctr>\n\u003Ctd align=\"right\">ext\u003C/td>\n\u003Ctd align=\"right\">extension to be used for dest files.\u003C/td>\n\u003C/tr>\n\u003C/tbody>\u003C/table>\n\u003Ch2>Links\u003C/h2>\n\u003Cp>\u003Ca href=\"http://dev.nodeca.com\">link text\u003C/a>\u003C/p>\n\u003Cp>\u003Ca href=\"http://nodeca.github.io/pica/demo/\" title=\"title text!\">link with title\u003C/a>\u003C/p>\n\u003Cp>Autoconverted link \u003Ca href=\"https://github.com/nodeca/pica\">https://github.com/nodeca/pica\u003C/a> (enable linkify to see)\u003C/p>\n\u003Ch2>Images\u003C/h2>\n\u003Cp>\u003Cimg src=\"https://octodex.github.com/images/minion.png\" alt=\"Minion\">\n\u003Cimg src=\"https://octodex.github.com/images/stormtroopocat.jpg\" alt=\"Stormtroopocat\" title=\"The Stormtroopocat\">\u003C/p>\n\u003Cp>Like links, Images also have a footnote style syntax\u003C/p>\n\u003Cp>\u003Cimg src=\"https://octodex.github.com/images/dojocat.jpg\" alt=\"Alt text\" title=\"The Dojocat\">\u003C/p>\n\u003Cp>With a reference later in the document defining the URL location:\u003C/p>\n\u003Ch2>Plugins\u003C/h2>\n\u003Cp>The killer feature of \u003Ccode>markdown-it\u003C/code> is very effective support of\n\u003Ca href=\"https://www.npmjs.org/browse/keyword/markdown-it-plugin\">syntax plugins\u003C/a>.\u003C/p>\n\u003Ch3>\u003Ca href=\"https://github.com/markdown-it/markdown-it-emoji\">Emojies\u003C/a>\u003C/h3>\n\u003Cblockquote>\n\u003Cp>Classic markup: :wink: :cry: :laughing: :yum:\u003C/p>\n\u003Cp>Shortcuts (emoticons): :-) :-( 8-) ;)\u003C/p>\n\u003C/blockquote>\n\u003Cp>see \u003Ca href=\"https://github.com/markdown-it/markdown-it-emoji#change-output\">how to change output\u003C/a> with twemoji.\u003C/p>\n\u003Ch3>\u003Ca href=\"https://github.com/markdown-it/markdown-it-sub\">Subscript\u003C/a> / \u003Ca href=\"https://github.com/markdown-it/markdown-it-sup\">Superscript\u003C/a>\u003C/h3>\n\u003Cul>\n\u003Cli>19^th^\u003C/li>\n\u003Cli>H\u003Cdel>2\u003C/del>O\u003C/li>\n\u003C/ul>\n\u003Ch3>\u003Ca href=\"https://github.com/markdown-it/markdown-it-ins\">&lt;ins&gt;\u003C/a>\u003C/h3>\n\u003Cp>++Inserted text++\u003C/p>\n\u003Ch3>\u003Ca href=\"https://github.com/markdown-it/markdown-it-mark\">&lt;mark&gt;\u003C/a>\u003C/h3>\n\u003Cp>==Marked text==\u003C/p>\n\u003Ch3>\u003Ca href=\"https://github.com/markdown-it/markdown-it-footnote\">Footnotes\u003C/a>\u003C/h3>\n\u003Cp>Footnote 1 link[^first].\u003C/p>\n\u003Cp>Footnote 2 link[^second].\u003C/p>\n\u003Cp>Inline footnote^[Text of inline footnote] definition.\u003C/p>\n\u003Cp>Duplicated footnote reference[^second].\u003C/p>\n\u003Cp>[^first]: Footnote \u003Cstrong>can have markup\u003C/strong>\u003C/p>\n\u003Cpre>\u003Ccode>and multiple paragraphs.\n\u003C/code>\u003C/pre>\u003Cp>[^second]: Footnote text.\u003C/p>\n\u003Ch3>\u003Ca href=\"https://github.com/markdown-it/markdown-it-deflist\">Definition lists\u003C/a>\u003C/h3>\n\u003Cp>Term 1\u003C/p>\n\u003Cp>: Definition 1\nwith lazy continuation.\u003C/p>\n\u003Cp>Term 2 with \u003Cem>inline markup\u003C/em>\u003C/p>\n\u003Cp>: Definition 2\u003C/p>\n\u003Cpre>\u003Ccode>    { some code, part of Definition 2 }\n\nThird paragraph of definition 2.\n\u003C/code>\u003C/pre>\u003Cp>\u003Cem>Compact style:\u003C/em>\u003C/p>\n\u003Cp>Term 1\n~ Definition 1\u003C/p>\n\u003Cp>Term 2\n~ Definition 2a\n~ Definition 2b\u003C/p>\n\u003Ch3>\u003Ca href=\"https://github.com/markdown-it/markdown-it-abbr\">Abbreviations\u003C/a>\u003C/h3>\n\u003Cp>This is HTML abbreviation example.\u003C/p>\n\u003Cp>It converts &quot;HTML&quot;, but keep intact partial entries like &quot;xxxHTMLyyy&quot; and so on.\u003C/p>\n\u003Cp>*[HTML]: Hyper Text Markup Language\u003C/p>\n\u003Ch3>\u003Ca href=\"https://github.com/markdown-it/markdown-it-container\">Custom containers\u003C/a>\u003C/h3>\n\u003Cp>::: warning\n\u003Cem>here be dragons\u003C/em>\n:::\u003C/p>\n","Category-2"],"uses":{"params":["section","category","subcategory"]}}]}
