{"type":"data","nodes":[null,null,null,{"type":"data","data":[{"content":1,"categoryTitle":2},"\u003Ch1>ESLint\u003C/h1>\n\u003Cp>ESLint is a static code analysis tool for identifying and fixing problems in JavaScript code. It is used in this project to maintain code quality and consistency by enforcing coding standards and best practices.\u003C/p>\n\u003Ch2>Why ESLint?\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Cstrong>Code Quality\u003C/strong>: Helps maintain high code quality by identifying potential errors and enforcing coding standards.\u003C/li>\n\u003Cli>\u003Cstrong>Consistency\u003C/strong>: Ensures code consistency across the project by enforcing a common set of rules.\u003C/li>\n\u003Cli>\u003Cstrong>Customization\u003C/strong>: Highly customizable, allowing you to define your own linting rules or use predefined ones.\u003C/li>\n\u003C/ul>\n\u003Ch2>Usage in This Project\u003C/h2>\n\u003Cp>In this project, ESLint is used to:\u003C/p>\n\u003Cul>\n\u003Cli>\u003Cstrong>Lint JavaScript Code\u003C/strong>: Identify and fix problems in JavaScript and Svelte code.\u003C/li>\n\u003Cli>\u003Cstrong>Enforce Coding Standards\u003C/strong>: Ensure that the code adheres to predefined coding standards and best practices.\u003C/li>\n\u003C/ul>\n\u003Ch3>Installation\u003C/h3>\n\u003Cp>To install ESLint, use the following command:\u003C/p>\n\u003Cpre>\u003Ccode class=\"hljs language-bash\">npm install eslint\n\u003C/code>\u003C/pre>\u003Cp>Additionally, install the necessary plugins for Svelte and Prettier integration:\u003C/p>\n\u003Cpre>\u003Ccode class=\"hljs language-bash\">npm install eslint-plugin-svelte eslint-config-prettier @types/eslint\n\u003C/code>\u003C/pre>\u003Ch3>Configuration\u003C/h3>\n\u003Cp>The ESLint configuration is defined in the \u003Ccode>.eslintrc.cjs\u003C/code> file:\u003C/p>\n\u003Cpre>\u003Ccode class=\"hljs language-js\">\u003Cspan class=\"hljs-variable language_\">module\u003C/span>.\u003Cspan class=\"hljs-property\">exports\u003C/span> = {\n    \u003Cspan class=\"hljs-attr\">env\u003C/span>: {\n        \u003Cspan class=\"hljs-attr\">browser\u003C/span>: \u003Cspan class=\"hljs-literal\">true\u003C/span>,\n        \u003Cspan class=\"hljs-attr\">es2021\u003C/span>: \u003Cspan class=\"hljs-literal\">true\u003C/span>\n    },\n    \u003Cspan class=\"hljs-attr\">extends\u003C/span>: [\u003Cspan class=\"hljs-string\">&apos;eslint:recommended&apos;\u003C/span>, \u003Cspan class=\"hljs-string\">&apos;plugin:svelte/recommended&apos;\u003C/span>, \u003Cspan class=\"hljs-string\">&apos;prettier&apos;\u003C/span>],\n    \u003Cspan class=\"hljs-attr\">parserOptions\u003C/span>: {\n        \u003Cspan class=\"hljs-attr\">ecmaVersion\u003C/span>: \u003Cspan class=\"hljs-number\">12\u003C/span>,\n        \u003Cspan class=\"hljs-attr\">sourceType\u003C/span>: \u003Cspan class=\"hljs-string\">&apos;module&apos;\u003C/span>\n    },\n    \u003Cspan class=\"hljs-attr\">plugins\u003C/span>: [\u003Cspan class=\"hljs-string\">&apos;svelte&apos;\u003C/span>],\n    \u003Cspan class=\"hljs-attr\">rules\u003C/span>: {\n        \u003Cspan class=\"hljs-comment\">// Add custom rules here\u003C/span>\n    }\n};\n\u003C/code>\u003C/pre>\u003Ch3>Example Usage\u003C/h3>\n\u003Cp>To lint your project files, you can use the following npm script defined in \u003Ccode>package.json\u003C/code>:\u003C/p>\n\u003Cpre>\u003Ccode class=\"hljs language-json\">\u003Cspan class=\"hljs-punctuation\">{\u003C/span>\n    \u003Cspan class=\"hljs-attr\">&quot;scripts&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-punctuation\">{\u003C/span>\n        \u003Cspan class=\"hljs-attr\">&quot;lint&quot;\u003C/span>\u003Cspan class=\"hljs-punctuation\">:\u003C/span> \u003Cspan class=\"hljs-string\">&quot;eslint .&quot;\u003C/span>\n    \u003Cspan class=\"hljs-punctuation\">}\u003C/span>\n\u003Cspan class=\"hljs-punctuation\">}\u003C/span>\n\u003C/code>\u003C/pre>\u003Cp>Run the linting process with:\u003C/p>\n\u003Cpre>\u003Ccode class=\"hljs language-bash\">npm run lint\n\u003C/code>\u003C/pre>\u003Ch3>Integration with SvelteKit\u003C/h3>\n\u003Cp>In SvelteKit, ESLint is configured to work with both JavaScript and Svelte files. Here&apos;s an example \u003Ccode>.eslintrc.cjs\u003C/code> configuration:\u003C/p>\n\u003Cpre>\u003Ccode class=\"hljs language-js\">\u003Cspan class=\"hljs-variable language_\">module\u003C/span>.\u003Cspan class=\"hljs-property\">exports\u003C/span> = {\n    \u003Cspan class=\"hljs-attr\">env\u003C/span>: {\n        \u003Cspan class=\"hljs-attr\">browser\u003C/span>: \u003Cspan class=\"hljs-literal\">true\u003C/span>,\n        \u003Cspan class=\"hljs-attr\">es2021\u003C/span>: \u003Cspan class=\"hljs-literal\">true\u003C/span>\n    },\n    \u003Cspan class=\"hljs-attr\">extends\u003C/span>: [\u003Cspan class=\"hljs-string\">&apos;eslint:recommended&apos;\u003C/span>, \u003Cspan class=\"hljs-string\">&apos;plugin:svelte/recommended&apos;\u003C/span>, \u003Cspan class=\"hljs-string\">&apos;prettier&apos;\u003C/span>],\n    \u003Cspan class=\"hljs-attr\">parserOptions\u003C/span>: {\n        \u003Cspan class=\"hljs-attr\">ecmaVersion\u003C/span>: \u003Cspan class=\"hljs-number\">12\u003C/span>,\n        \u003Cspan class=\"hljs-attr\">sourceType\u003C/span>: \u003Cspan class=\"hljs-string\">&apos;module&apos;\u003C/span>\n    },\n    \u003Cspan class=\"hljs-attr\">plugins\u003C/span>: [\u003Cspan class=\"hljs-string\">&apos;svelte&apos;\u003C/span>],\n    \u003Cspan class=\"hljs-attr\">settings\u003C/span>: {\n        \u003Cspan class=\"hljs-string\">&apos;svelte3/ignore-warnings&apos;\u003C/span>: \u003Cspan class=\"hljs-function\">(\u003Cspan class=\"hljs-params\">warn\u003C/span>) =&gt;\u003C/span> warn.\u003Cspan class=\"hljs-property\">code\u003C/span> === \u003Cspan class=\"hljs-string\">&apos;a11y-no-onchange&apos;\u003C/span>\n    },\n    \u003Cspan class=\"hljs-attr\">overrides\u003C/span>: [\n        {\n            \u003Cspan class=\"hljs-attr\">files\u003C/span>: [\u003Cspan class=\"hljs-string\">&apos;*.svelte&apos;\u003C/span>],\n            \u003Cspan class=\"hljs-attr\">processor\u003C/span>: \u003Cspan class=\"hljs-string\">&apos;svelte3/svelte3&apos;\u003C/span>\n        }\n    ],\n    \u003Cspan class=\"hljs-attr\">rules\u003C/span>: {\n        \u003Cspan class=\"hljs-comment\">// Add custom rules here\u003C/span>\n    }\n};\n\u003C/code>\u003C/pre>\u003Ch3>Additional Resources\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://eslint.org/docs/user-guide/getting-started\">ESLint Documentation\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/eslint/eslint\">ESLint GitHub Repository\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://github.com/sveltejs/eslint-plugin-svelte3\">ESLint Plugin for Svelte\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://prettier.io/docs/en/integrating-with-linters.html\">Prettier Integration\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Cp>Feel free to explore these resources to get a deeper understanding of how ESLint works and how you can leverage it in your projects.\u003C/p>\n","Dev-Dependencies"],"uses":{"params":["section","category","subcategory"]}}]}
